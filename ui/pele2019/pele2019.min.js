function Pele2019UIExt(){var a=this;this._skinName="pele2019";this.menu=null;this.ShowMenu=function(){a.Pause();a.isCourseMenuItemsVisible(true);a.UpdateMenuCollapsedStates(a.currentPage());a.menu.open()};this._OnMenuOpened=function(){$("#search").focus();a.EnableKeyboards([a._courseMenuKeyboard])};this.CloseMenu=function(){a.menu.close()};this._OnMenuClosed=function(){a.ClearSelectedCourseItem();a.ClearCourseItemFilter();$("#search").blur();a.EnableKeyboards([a._defaultKeyboard,a._frameKeyboard]);a.Play()};this.ToggleAudioText=ds.utils.ExtendMethod(this.ToggleAudioText,function(){var b=this.audioTextEnabled()?this.config.controlBarBottomActiveIconColor():this.config.controlBarBottomIconColor();$(".fa-closed-captioning").css("color",b)});this.InitTitleIcon=function(){var b=document.createElement("link");b.rel="icon";b.type="image/x-icon";b.href="images/favicon.ico";document.head.appendChild(b)};this.InitNextCompletedCss=function(b){var c=document.createElement("style");c.textContent=".nextCompleted {animation:colorLoop 0.75s infinite;-moz-animation:colorLoop 0.75s infinite; /* Firefox */-webkit-animation:colorLoop 0.75s infinite; /* Safari and Chrome */-o-animation:colorLoop 0.75s infinite; /* Opera */}@keyframes colorLoop {0% {color:#fff;background-color:"+b+";border-color:"+b+";}50% {color:"+b+";background-color:transparent;border-color:transparent;}100% {color:#fff;background-color:"+b+";border-color:"+b+";}}";document.head.appendChild(c)};this.UpdateMenuCollapsedStates=function(d){if(!d){return false}ko.utils.arrayForEach(a.currentOrg().topicsList(),function(e){e.isItemsVisible(false)});function c(e){if(e){var g=a.currentOrg().itemsDict()[e];if(g){g.isItemsVisible(true);var f=g.parentId;if(f){c(f)}}}}c(d.parentId);var b=$("#menu .cmenu-item.isCurrent");if(b.length){b.get(0).scrollIntoView(true)}};this.HandleMenuItemClick=function(c,b){if(c.type==="topic"){a.SelectCourseItem(c);a.CollapseItemGroup(c,b)}else{a.LoadPageFromNav(c,b)}};this.CollapseItemGroup=function(c,b){c.isItemsVisible(!c.isItemsVisible())};this.GetInlineMenuItemStyle=function(d){var b=0;function c(e){if(e&&e.parentId){b+=1;var f=a.currentOrg().itemsDict()[e.parentId];c(f)}}c(d);return{"padding-left":(18+b*15)+"px"}};this.InitTopicColorCss=function(c){var b=document.createElement("style");b.textContent=".pageTitle .text-topic {color: "+c+";}.cmenu-item.cmenu-group .item-text,.text-topic {color: "+c+";}.cmenu-item .collapse-icon {color: "+c+";}.cmenu-item.isCurrent:after {border-color: "+c+";}.cmenu-item.selected:before {background-color: "+c+";}";document.head.appendChild(b)};this.GetMenuItemCssClass=function(e){var d=a.currentTopic();var c=a.currentPage();var b={disabled:!a.IsItemEnabled(e),isCurrent:(c&&c.id===e.id)||(d&&d.id===e.id),"cmenu-group":e.type==="topic",selected:e.selected()};return b};this.GetItemStatusCssClass=function(b){if(!b){return}if(b.visited()&&!b.completed()){return"incomplete"}if(b.completed()){return"passed"}return"notstarted"};this.optionsMenu=null;this.ShowOptionsMenu=function(){a.Pause();a.optionsMenu.open()};this._OnOptionsMenuOpened=function(){$("#optionsClose").focus();a.EnableKeyboards([a._optionsMenuKeyboard])};this.CloseOptionsMenu=function(){a.optionsMenu.close()};this._OnOptionsMenuClosed=function(){a.EnableKeyboards([a._defaultKeyboard,a._frameKeyboard]);a.Play()};this.isProgressMarkerVisible=ko.observable();this.fullItems=ko.pureComputed(function(){var b=a.currentOrg().itemsList();var d=a.currentOrg().items();var c=b.filter(function(e){if(e.type==="topic"||e.type==="mergedpages"){return false}return true});return c});this._GetProgressPageSegmentWidth=function(){var b=$("#progressContainer").width();var d=12;var e=a.currentOrg().items().filter(function(f){return f.type==="topic"});var c=(b-d*e.length)/(a.fullItems().length-1);return c};this.GetProgressSegmentWidth=function(b){var c=Math.floor(a._GetProgressPageSegmentWidth()*b.descendantPages().length);return c};this.GetProgressSegmentCompletedWidth=function(c){var b=c.descendantPages().filter(function(e){return e.completed()});var d=Math.floor(a._GetProgressPageSegmentWidth()*b.length);return d};this.GetProgressSegmentIncompletedWidth=function(c){var b=c.descendantPages().filter(function(e){return(!e.completed()&&e.visited())});var d=Math.floor(a._GetProgressPageSegmentWidth()*b.length);return d};this.GetProgressMarkerPosition=function(c){var d=0;if(!c){return}var e;function f(h){if(h){var i=a.currentOrg().itemsDict()[h];if(!i.parentId){e=i}else{f(i.parentId)}}}f(c.parentId);if(!e){a.isProgressMarkerVisible(false);return}else{a.isProgressMarkerVisible(true)}var b=$("#progressContainer .progressSegment[pele-id='"+e.id+"']");var g=this._GetProgressPageSegmentWidth();if(b.length){d=Math.floor(b.position().left-3+(a.DescendantIndexInParent(c,e)*g)+g)}return d+"px"};this.Resize=function(){if(a.isProgressActive()){a.isProgressActive(false);a.isProgressActive(true)}a.pageController()&&a.pageController().Resize()};this.GetContentHeight=function(){var b=$("#contentContainer");var c=a.audioTextEnabled()&&a.pageController()&&a.pageController().audioText()?b.height()-100:b.height();return c};this._InitUI=function(){document.title="Pelesys CBT Player";var b=document.createElement("link");b.rel="stylesheet";b.href="ui/pele2019/pele2019.css";document.getElementsByTagName("head")[0].appendChild(b);a.InitElements();a.InitComponents();a.InitTitleIcon();a.InitSubscriptions();a.InitUIEventHandlers();a._uiInitialized=true};this.InitElements=function(){$("#search").on("click",function(b){a.ClearSelectedCourseItem();b.stopPropagation()})};this.InitComponents=function(){a.menu=new Menu({id:"menu",wrapper:"#outerContainer",type:"slide-left",maskId:"#c-mask",onOpen:a._OnMenuOpened,onClose:a._OnMenuClosed});a.optionsMenu=new Menu({id:"optionsMenu",wrapper:"#outerContainer",type:"slide-right",maskId:"#c-mask",onOpen:a._OnOptionsMenuOpened,onClose:a._OnOptionsMenuClosed});if(!a.isMobile()){$("#volumeSlider").slider({reversed:true,tooltip:"hide",min:0,max:1,step:0.01});$("#volumeSlider").slider()&&$("#volumeSlider").slider().on("change",function(b){var c=b.value;if(c.newValue!==0){a.isMuted(false)}a.nonMutedVolumeLevel(c.newValue);a.volumeLevel(c.newValue)})}};this.InitSubscriptions=function(){a.config.controlBarBottomActiveIconColor.subscribe(function(b){if(b){a.InitNextCompletedCss(b)}});a.config.controlBarBottomActiveIconColor.valueHasMutated();a.config.topicColor.subscribe(function(b){if(b){a.InitTopicColorCss(b)}});a.config.topicColor.valueHasMutated()};this.InitUIEventHandlers=function(){$(window).on("blur",function(c){$("#btnVolume, #volumeControl").removeClass("active");$(".dropdown.open .dropdown-toggle").dropdown("toggle")});$(document).on("mousedown",function(c){if(!$(c.target).closest("#btnVolume, #volumeControl").length){$("#btnVolume, #volumeControl").removeClass("active");$("#content-mask").hide()}});$(".navBtn").mouseup(function(){$(this).blur()});$("#btnVolume, #volumeControl").on("mouseenter",function(){$("#btnVolume, #volumeControl").addClass("show")});$("#btnVolume, #volumeControl").on("mouseleave",function(){$("#btnVolume, #volumeControl").removeClass("show")});$("#btnVolume, #volumeControl").on("mousedown",function(){$("#btnVolume, #volumeControl").addClass("active");$("#content-mask").show()});$("#optionsMenu .cmenu-item").on("click",function(){a.optionsMenu.close()});var b=$("#help-modal");b.on("show.bs.modal",function(){a.Pause()});b.on("hidden.bs.modal",function(){a.Play()})}}if(!ko.components.isRegistered("pele2019")){ko.components.register("pele2019",{viewModel:{createViewModel:function(b,a){var c=b.model;c._InitUI();return c}},template:'<div id="outerContainer">\r\n    <div id="wrapper" class="cmenu-o-wrapper">\r\n        <div id="controlbarTop" class="container-fluid" data-bind="css: { \'hasProgress\': currentOrg() && isProgressActive() }, style:{ backgroundColor : config.controlBarTopColor() }">\r\n            <div class="row">\r\n                <div class="col-xs-10 no-horizontal-space-left" style="height: 50px;">\r\n                    <button class="navBtn glyphicon glyphicon-menu-hamburger" id="btnCourseNav" data-bind="click: ShowMenu, attr: { \'title\': lang().dict.menu }"></button>\r\n                    <div id="menu" class="cmenu cmenu-slide-left">\r\n                        <div class="cmenu-close" id="menuClose" data-bind="click: CloseMenu, style:{ backgroundColor : config.titleBarColor() }" >\r\n                            <span class="glyphicon glyphicon-chevron-left pull-right"></span>\r\n                            <span data-bind="text: lang().dict.menu"></span>\r\n                            <input type="text" class="form-control input-sm" name="search" id="search" data-bind="textInput: currentOrg().itemsFilter, event: { keyup: OnSearchKeyup}, visible: enableDevControls" placeholder="search">\r\n                        </div>\r\n                        <div class="cmenu-items" data-bind="if: isCourseMenuItemsVisible">\r\n                            <!-- ko if: !currentOrg().itemsFilter() -->\r\n                                <!-- ko template: { name: \'recursiveNavTemplate\', data: currentOrg } --><!-- /ko -->\r\n                            <!-- /ko -->\r\n                            <!-- ko if: currentOrg().itemsFilter() -->\r\n                            <div data-bind="foreach: currentOrg().filteredItemsList()">\r\n                                <div class="cmenu-item" data-bind="attr: {\'data-id\': id }, click: $root.HandleMenuItemClick, style: $root.GetInlineMenuItemStyle($data), css: $root.GetMenuItemCssClass($data), setFocus: $data">\r\n                                    <!-- ko template: { name: \'filteredItemTemplate\' } --><!-- /ko -->\r\n                                </div>\r\n                            </div>\r\n                            <!-- /ko -->\r\n                        </div>\r\n                        <script type="text/html" id="recursiveNavTemplate">\r\n                            <div data-bind="foreach: items">\r\n                                <div class="cmenu-item" data-bind="attr: {\'data-id\': id }, click: $root.HandleMenuItemClick, style: $root.GetInlineMenuItemStyle($data), css: $root.GetMenuItemCssClass($data), setFocus: $data">\r\n                                    <!-- ko if: type === \'topic\' -->\r\n                                    <span class="collapse-icon glyphicon" data-bind="css: { \'glyphicon-menu-right\': !isItemsVisible(), \'glyphicon-menu-down\': isItemsVisible }"></span>\r\n                                    <!-- /ko -->\r\n                                    <!-- ko template: { name: \'itemTemplate\' } --><!-- /ko -->\r\n                                </div>\r\n                                <div class="cmenu-collapse-cnt in" data-bind="if: type === \'topic\' && items().length > 0 && isItemsVisible()">\r\n                                    <!-- ko template: { name: \'recursiveNavTemplate\' } --><!-- /ko -->\r\n                                </div>\r\n                            </div>\r\n                        </script>\r\n                        <script type="text/html" id="itemTemplate">\r\n                            <span class="icon-status bordered" data-bind="attr: { \'title\': $root.GetItemStatusTooltip($data) }, css: $root.GetItemStatusCssClass($data), click: $root._DevCycleStatus"></span>\r\n                            <span class="item-text">\r\n                                <span class="text-dev" data-bind="if: $root.enableDevControls">\r\n                                    <span data-bind="text: $index() + 1"></span> -\r\n                                    <span data-bind="text: id"></span> -\r\n                                </span>\r\n                                <span class="title" data-bind="text: title"></span>\r\n                            </span>\r\n                        </script>\r\n                        <script type="text/html" id="filteredItemTemplate">\r\n                            <span class="icon-status bordered" data-bind="attr: { \'title\': $root.GetItemStatusTooltip($data) }, css: $root.GetItemStatusCssClass($data), click: $root._DevCycleStatus"></span>\r\n                            <span class="item-text">\r\n                                <span class="text-dev" data-bind="if: $root.enableDevControls">\r\n                                    <span data-bind="text: id"></span> -\r\n                                </span>\r\n                                <span class="title" data-bind="text: title }"></span>\r\n                            </span>\r\n                        </script>\r\n                    </div>\r\n                    <button class="navBtn glyphicon peleicon icon-progress" id="btnProgress" data-bind="visible: config.buttons.progress, click: ToggleProgress, attr: { \'title\': \'Toggle progress\' }, css: { \'on\': isProgressActive}"></button>\r\n                    <!--ko if: currentOrg() && isProgressActive()-->\r\n                    <div id="progressContainer">\r\n                        <!--ko foreach: currentOrg().topicsList--><div class="progressSegment" data-bind="style: { width: $root.GetProgressSegmentWidth($data) + \'px\' }, attr: { \'pele-id\' : id }"><div class="progressSegmentInner"><div class="progressSegmentCompleted" data-bind="style: { width: $root.GetProgressSegmentCompletedWidth($data) + \'px\'}"></div><div class="progressSegmentIncomplete" data-bind="style: { width: $root.GetProgressSegmentIncompletedWidth($data) + \'px\'}"></div></div></div><div class="progressTopic">\r\n                            <span class="icon-status" data-bind="attr: { \'title\': title }, css: $root.GetItemStatusCssClass($data)"></span>\r\n                        </div><!-- /ko -->\r\n                        <!--ko if: $root.GetCurrentPage() -->\r\n                        <div id="progressMarker" data-bind="attr: { \'title\': GetCurrentPage().title }, style: { left: $root.GetProgressMarkerPosition(GetCurrentPage()) }"></div>\r\n                        <!-- /ko -->\r\n                    </div>\r\n                    <!-- /ko -->\r\n                    <!--ko if: currentPageIndex() && !isProgressActive()-->\r\n                    <span id="pageIndex" class="navText">\r\n                        <span data-bind="text: currentPageIndex"></span>/<span data-bind="text: numParentItemPages"></span>\r\n                    </span>\r\n                    <!-- /ko -->\r\n                    <span id="currentPageInfo" data-bind="if: GetCurrentPage">\r\n                        <span class="icon-status" data-bind="attr: { \'title\': GetItemStatusTooltip(GetCurrentPage()) }, css: GetItemStatusCssClass(GetCurrentPage())"></span>\r\n                        <span class="navText pageTitle">\r\n                            <span class="text-dev" data-bind="visible: enableDevControls, text: GetCurrentPage().id + \' - \'"></span>\r\n                            <span class=\'text-topic\' data-bind="if: GetCurrentTopic()">\r\n                            <span data-bind="attr: { \'title\': GetCurrentTopic().title }, text: GetCurrentTopic().title"></span> - \r\n                            </span>\r\n                            <span data-bind="attr: { \'title\': GetCurrentPage().title }, text: GetCurrentPage().title"></span>\r\n                        </span>\r\n                    </span>\r\n                </div>\r\n                <div class="col-xs-2 text-right no-horizontal-space">\r\n                    <button id="" class="navBtn glyphicon glyphicon-question-sign" data-bind="attr: { \'title\': lang().dict.help }, click: ShowHelp"></button><button id="btnExit" class="navBtn" data-bind="attr: { \'title\': lang().dict.exit }, click: ClosePlayer"><span class="icon-close">&times;</span></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id="contentContainer" data-bind="css: { hasAudioText: audioTextEnabled() && audioText() }, style:{ backgroundColor : config.contentContainerBackgroundColor() }">\r\n            <!-- iframe gets dynamically injected here. -->\r\n            <div id="audioTextContainer" class="container">\r\n                <div class="row" style="height: 100%;">\r\n                    <div class="col-md-12" style="height: 100%; padding: 5px;">\r\n                        <div class="well text-center no-vertical-space">\r\n                            <div class="pull-right">\r\n                                <span id="transcriptBtn" class="fas fa-file-alt" data-bind="attr: { \'title\': lang().dict.transcript }, click: ShowTranscript"></span>\r\n                            </div>\r\n                            <span data-bind="html: audioText"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id="contentLoader" style="display: none;" data-bind="visible: isLoadingPage">\r\n                <div id="contentLoaderInner">\r\n                    <div class="spinner"></div>\r\n                </div>\r\n            </div>\r\n            <div id="toasts"></div>\r\n            <div id="devToolbar"></div>\r\n            <span id="devIcon" class="fas fa-cogs" style="display: none;" data-bind="visible: config.developerMode, click: ToggleDevControls"></span>\r\n            <div id="content-mask" style="display:none;"></div>\r\n        </div>\r\n        <div id="controlbarBtm" class="container-fluid no-select" data-bind="style: { backgroundColor: config.controlBarBottomColor()}">\r\n            <div class="row">\r\n                <div class="col-xs-3 no-horizontal-space">\r\n                    <!--ko if: config.logoPath-->\r\n                    <img class="customLogo" data-bind="attr: {\'src\': config.logoPath, \'title\': lang().dict.returnToHomePage }, click: LoadDefaultPage" />\r\n                    <!--/ko-->\r\n                </div>\r\n                <div class="col-xs-6 text-center no-horizontal-space">\r\n                    <!--ko if: isPlaybackToolbarVisible-->\r\n                    <button class="navBtn glyphicon glyphicon-chevron-left" data-bind="style: { color: config.controlBarBottomIconColor()}, visible: !isFirstInMultiPageTopic(), attr: { \'title\': PreviousPageTooltip() }, enable: canPlayPreviousPage, click: PlayPreviousPage"></button><button class="navBtn glyphicon glyphicon-home" data-bind="style: { color: config.controlBarBottomIconColor()}, visible: isFirstInMultiPageTopic, attr: { \'title\': lang().dict.homePage }, enable: canReturnHome, click: LoadDefaultPage"></button><button class="navBtn glyphicon glyphicon-backward" data-bind="style: { color: config.controlBarBottomIconColor()}, visible: config.buttons.sections, enable: canPlayPreviousSection, click: LoadPreviousSection"></button>\r\n                    <!--ko if: isPlaybackVisible-->\r\n                    <button class="navBtn glyphicon glyphicon-play" style="display: none" data-bind="style: { color: config.controlBarBottomIconColor()}, attr: { \'title\': lang().dict.play }, enable: canPlay, visible: !isPlaying(), click: Play"></button>\r\n                    <button class="navBtn glyphicon glyphicon-pause" data-bind="style: { color: config.controlBarBottomIconColor()}, attr: { \'title\': lang().dict.pause }, enable: canPause, visible: isPlaying, click: Pause"></button>\r\n                    <!--/ko-->\r\n                    <!--ko if: !isPlaybackVisible()-->\r\n                    <button class="navBtn glyphicon glyphicon-pause" style="visibility: hidden;"></button>\r\n                    <!--/ko-->\r\n                    <button class="navBtn glyphicon glyphicon-forward" data-bind="style: { color: config.controlBarBottomIconColor()}, visible: config.buttons.sections, enable: canPlayNextSection, click: LoadNextSection"></button><button class="navBtn glyphicon glyphicon-chevron-right" data-bind="style: { color: config.controlBarBottomIconColor()}, visible: !isLastPageInTopic(), attr: { \'title\': NextPageTooltip() }, enable: canPlayNextPage, css: { \'nextCompleted\': isNextVisualIndicator}, click: PlayNextPage"></button><button class="navBtn glyphicon glyphicon-home" data-bind="style: { color: config.controlBarBottomIconColor()}, visible: isLastPageInTopic, attr: { \'title\': lang().dict.homePage }, enable: canReturnHome, css: { \'nextCompleted\': isNextVisualIndicator}, click: LoadDefaultPage"></button>\r\n                    <!--/ko-->\r\n                </div>\r\n                <div class="col-xs-3 text-right no-horizontal-space">\r\n                    <button class="navBtn glyphicon glyphicon-repeat" data-bind="style: { color: config.controlBarBottomIconColor()}, attr: { \'title\': lang().dict.reload }, enable: canReload, click: Reload"></button><button class="navBtn fas fa-closed-captioning" data-bind="style: { color: config.controlBarBottomActiveIconColor()}, attr: { \'title\': lang().dict.audioText }, visible: config.buttons.audioText, click: ToggleAudioText, css: { \'on\': audioTextEnabled}"></button><button id="btnVolume" class="navBtn glyphicon glyphicon-volume-up" data-bind="style: { color: config.controlBarBottomIconColor()}, visible: canAdjustVolume, css: GetVolumeCss(), click: ToggleMute"></button><button id="btnOptions" class="navBtn glyphicon glyphicon-option-vertical" data-bind="style: { color: config.controlBarBottomIconColor()}, click: ShowOptionsMenu, attr: { \'title\': lang().dict.options }"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id="volumeControl" data-bind="css: { \'muted\': isMuted }">\r\n    <input type="text" id="volumeSlider" class="slider form-control" value="" data-slider-orientation="vertical" />\r\n</div>\r\n<div id="c-mask" class="cmenu-mask"></div>\r\n<nav id="optionsMenu" class="cmenu cmenu-slide-right">\r\n    <div class="cmenu-close" id="optionsClose" data-bind="click: CloseOptionsMenu, style:{ backgroundColor : config.titleBarColor()}">\r\n        <span class="glyphicon glyphicon-chevron-right pull-right"></span>\r\n        <span data-bind="text: lang().dict.options"></span>\r\n    </div>\r\n    <div class="cmenu-items">\r\n        <div class="cmenu-item" data-bind="visible: config.buttons.audioText, click: ToggleAudioText"><span data-bind="text: lang().dict.audioText"></span><span class="glyphicon glyphicon-ok pull-right" data-bind="visible: audioTextEnabled"></span></div>\r\n        <div class="cmenu-item" data-bind="visible: config.buttons.language, click: ShowLanguage"><span data-bind="text: lang().dict.organizationOption"></span></div>\r\n        <div class="cmenu-item" data-bind="visible: config.buttons.glossary, click: ShowGlossary"><span data-bind="text: lang().dict.glossary"></span></div>\r\n        <div class="cmenu-item" data-bind="visible: config.buttons.reference, click: ShowReferences"><span data-bind="text: lang().dict.references"></span></div>\r\n        <div class="cmenu-item" data-bind="visible: canComment, click: ShowComments"><span data-bind="text: lang().dict.comments"></span></div>\r\n        <div class="cmenu-item" data-bind="visible: canDesignLaunchOptions, click: ShowLaunchOptionsDesigner"><span data-bind="">Launch Options Designer</span></div>\r\n        <div class="cmenu-item" data-bind="click: ShowHelp"><span data-bind="text: lang().dict.help"></span></div>\r\n        <div class="cmenu-item" data-toggle="modal" data-target="#about-modal">\r\n            <span data-bind="text: lang().dict.about"></span>\r\n        </div>\r\n    </div>\r\n</nav><!-- /cmenu slide-right -->\r\n\r\n<div class="modal modal-wide fade" id="help-modal" tabindex="-1" role="dialog">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header"  data-bind= "style: { backgroundColor: config.titleBarColor() }">\r\n                <button type="button" class="close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n                <h4 class="modal-title" data-bind="text: lang().dict.help"></h4>\r\n            </div>\r\n            <div class="modal-body" style="text-align: center;">\r\n                <img style="max-width: calc(100vw - 80px); max-height: calc(100vh - 150px);" src="images/PlayerHelpOverlay.png" />\r\n            </div>            \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id="appLoader">\r\n    <div id="pelesysLogo" class="text-center">\r\n        <img src="images/pclogowhite.png" />\r\n    </div>\r\n    <div id="appLoadingProgress">\r\n        <div class="spinner"></div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="about-modal" tabindex="-1" role="dialog">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content about-modal-pf">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">\r\n                    <span aria-hidden="true">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class="modal-body">\r\n                <h3 class="text-uppercase"><strong data-bind="click: DevClick">Galaxy</strong> CBT Player</h3>\r\n                <div class="product-versions-pf">\r\n                    <ul class="list-unstyled">\r\n                        <li><strong data-bind="text: lang().dict.version"></strong> <span data-bind="text: GetVersion()" /></li>\r\n                    </ul>\r\n                </div>\r\n                <div class="trademark-pf">\r\n                    <span data-bind="text: lang().dict.trademark"></span>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <img src="images/pclogowhite.png" style="width: 240px;" data-bind="click: GClick" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'})}CBTPlayer.RegisterUserInterface("pele2019",Pele2019UIExt);var _pele2019=1;